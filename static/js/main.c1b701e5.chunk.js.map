{"version":3,"sources":["Store.tsx","App.tsx","Actions.ts","HomePage.tsx","FavPage.tsx","index.tsx"],"names":["initialState","episodes","favorites","Store","createContext","reducer","state","action","type","payload","filter","episode","id","App","props","useContext","className","to","length","children","toggleFavAction","dispatch","map","ep","includes","EpisodesList","lazy","HomePage","useEffect","a","async","fetch","data","json","dataJSON","_embedded","fetchDataAction","fallback","FavPage","RouterPage","pageComponent","ReactDOM","render","useReducer","Provider","value","path","document","getElementById"],"mappings":"kQAKMA,EAAuB,CAC3BC,SAAU,GACVC,UAAW,IAGAC,EAAQC,wBAA4BJ,GAEjD,SAASK,EAAQC,EAAeC,GAC9B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,eACFF,EADL,CAEEL,SAAUM,EAAOE,UAErB,IAAK,UACH,OAAO,eACFH,EADL,CAEEJ,UAAU,GAAD,mBAAMI,EAAMJ,WAAZ,CAAuBK,EAAOE,YAE3C,IAAK,aACH,OAAO,eACFH,EADL,CAEEJ,UAAWI,EAAMJ,UAAUQ,QAAO,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOE,QAAQG,QAEjF,QACE,OAAON,GCzBb,IAoBeO,EApB4B,SAACC,GAAgB,IAClDR,EAAUS,qBAAWZ,GAArBG,MAER,OACE,oCACE,4BAAQU,UAAU,UAChB,6BACE,8CACA,6DAEF,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,gBAAgCX,EAAMJ,UAAUgB,UAGnDJ,EAAMK,W,gBCPAC,EAAkB,SAACT,EAAmBT,EAA4BmB,GAI7E,OAAOA,EAAS,CACdb,KAJmBN,EAAUoB,KAAI,SAACC,GAAD,OAA0BA,EAAGX,MAC7DY,SAASb,EAAQC,IAGG,aAAe,UACpCH,QAASE,KCZPc,EAAeC,gBAAK,kBAAM,gCAuBjBC,EArBY,WAAO,IAAD,EACHZ,qBAAWZ,GAA/BG,EADuB,EACvBA,MAAOe,EADgB,EAChBA,SAEfO,qBAAU,WACkB,IAA1BtB,EAAML,SAASiB,QDVY,SAAOG,GAAP,UAAAQ,EAAAC,OAAA,sDACjB,0EADiB,WAAAD,EAAA,MAEVE,MADP,4EADiB,cAEvBC,EAFuB,kBAAAH,EAAA,MAGNG,EAAKC,QAHC,cAGvBC,EAHuB,yBAItBb,EAAS,CACdb,KAAM,aACNC,QAASyB,EAASC,UAAUlC,YAND,qCCUImC,CAAgBf,MAGjD,IAAMP,EAAuB,CAC3Bb,SAAUK,EAAML,SAChBmB,kBACAlB,UAAWI,EAAMJ,UACjBmB,YAGF,OACE,kBAAC,WAAD,CAAUgB,SAAU,oCAAE,4CACpB,kBAACZ,EAAiBX,KCnBlBW,EAAeC,gBAAK,kBAAM,gCAoBjBY,EAjBW,WAAO,IAAD,EACFvB,qBAAWZ,GAA/BG,EADsB,EACtBA,MAAOe,EADe,EACfA,SAETP,EAAuB,CAC3Bb,SAAUK,EAAMJ,UAChBkB,kBACAlB,UAAWI,EAAMJ,UACjBmB,YAGF,OACE,kBAAC,WAAD,CAAUgB,SAAU,oCAAE,4CACpB,kBAAC,EAAiBvB,KCXlByB,EAAa,SAACzB,GAAD,OAA+DA,EAAM0B,eACxFC,IAASC,OACP,mBLsBK,SAAuB5B,GAA0B,IAAD,EAC3B6B,qBAAWtC,EAASL,GADO,mBAC9CM,EAD8C,KACvCe,EADuC,KAErD,OAAO,kBAAClB,EAAMyC,SAAP,CAAgBC,MAAO,CAACvC,QAAOe,aAAYP,EAAMK,YKxBxD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAK2B,KAAK,KACR,kBAACP,EAAD,CAAYC,cAAe,kBAAC,EAAD,MAAcM,KAAK,MAC9C,kBAACP,EAAD,CAAYC,cAAe,kBAAC,EAAD,MAAaM,KAAK,cAInDC,SAASC,eAAe,W","file":"static/js/main.c1b701e5.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react'\r\n\r\nimport { IState, IAction } from './interfaces'\r\n\r\n\r\nconst initialState: IState = {\r\n  episodes: [],\r\n  favorites: [],\r\n}\r\n\r\nexport const Store = createContext<IState | any>(initialState)\r\n\r\nfunction reducer(state: IState, action: IAction): IState {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA':\r\n      return {\r\n        ...state,\r\n        episodes: action.payload\r\n      }\r\n    case 'ADD_FAV':\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.payload],\r\n      }\r\n    case 'REMOVE_FAV':\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.filter((episode) => episode.id !== action.payload.id)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function StoreProvider(props: any): JSX.Element {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  return <Store.Provider value={{state, dispatch}}>{props.children}</Store.Provider>\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link, RouteComponentProps } from '@reach/router'\r\nimport { Store } from './Store'\r\n\r\n\r\nconst App: React.FC<RouteComponentProps> = (props: any) => {\r\n  const { state } = useContext(Store)\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div>\r\n          <h1>Rick and Morty</h1>\r\n          <p>Pick your favorite episode!!!</p>\r\n        </div>\r\n        <div>\r\n          <Link to='/'>Home</Link>\r\n          <Link to='/faves'>Favorite(s): {state.favorites.length}</Link>\r\n        </div>\r\n      </header>\r\n      {props.children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { IEpisode, IAction } from './interfaces'\r\n\r\n\r\nexport const fetchDataAction = async (dispatch: any) => {\r\n  const url = 'https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes'\r\n  const data = await fetch(url)\r\n  const dataJSON = await data.json()\r\n  return dispatch({\r\n    type: 'FETCH_DATA',\r\n    payload: dataJSON._embedded.episodes\r\n  })\r\n}\r\n\r\nexport const toggleFavAction = (episode: IEpisode, favorites: Array<IEpisode>, dispatch: any): IAction => {\r\n  const episodeInFav = favorites.map((ep: IEpisode): number => ep.id)\r\n    .includes(episode.id)\r\n\r\n  return dispatch({\r\n    type: episodeInFav ? 'REMOVE_FAV' : 'ADD_FAV',\r\n    payload: episode\r\n  })\r\n}","import React, { useContext, useEffect, lazy, Suspense } from 'react'\r\nimport { IEpisodeProps } from './interfaces'\r\nimport { Store } from './Store'\r\n\r\nimport { toggleFavAction, fetchDataAction } from './Actions'\r\n\r\n\r\nconst EpisodesList = lazy(() => import('./episodesList'))\r\n\r\nconst HomePage: React.FC = () => {\r\n  const { state, dispatch } = useContext(Store)\r\n\r\n  useEffect((): void => {\r\n    state.episodes.length === 0 && fetchDataAction(dispatch)\r\n  });\r\n\r\n  const props: IEpisodeProps = {\r\n    episodes: state.episodes,\r\n    toggleFavAction,\r\n    favorites: state.favorites,\r\n    dispatch,\r\n  }\r\n\r\n  return (\r\n    <Suspense fallback={<><h1>LOADING...</h1></>}>\r\n      <EpisodesList {...props} />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useContext, Suspense, lazy } from 'react'\r\n\r\nimport { toggleFavAction } from './Actions'\r\nimport { Store } from './Store'\r\nimport { IEpisodeProps } from './interfaces'\r\n\r\nconst EpisodesList = lazy(() => import('./episodesList'))\r\n\r\n\r\nconst FavPage: React.FC = () => {\r\n  const { state, dispatch } = useContext(Store)\r\n\r\n  const props: IEpisodeProps = {\r\n    episodes: state.favorites,\r\n    toggleFavAction,\r\n    favorites: state.favorites,\r\n    dispatch,\r\n  }\r\n\r\n  return (\r\n    <Suspense fallback={<><h1>LOADING...</h1></>}>\r\n      <EpisodesList {...props} />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default FavPage;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Router, RouteComponentProps } from '@reach/router'\r\nimport './index.css'\r\nimport App from './App'\r\nimport HomePage from './HomePage'\r\nimport FavPage from './FavPage'\r\nimport { StoreProvider } from './Store'\r\n\r\n\r\nconst RouterPage = (props: {pageComponent: JSX.Element} & RouteComponentProps) => props.pageComponent\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <Router>\r\n      <App path='/'>\r\n        <RouterPage pageComponent={<HomePage />} path='/' />\r\n        <RouterPage pageComponent={<FavPage />} path='/faves' />\r\n      </App>\r\n    </Router>\r\n  </StoreProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}