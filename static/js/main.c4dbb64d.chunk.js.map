{"version":3,"sources":["Store.tsx","App.tsx","Actions.ts","HomePage.tsx","FavPage.tsx","index.tsx"],"names":["initialState","episodes","favorites","Store","createContext","reducer","state","action","type","payload","filter","episode","id","App","props","useContext","className","to","length","children","toggleFavAction","dispatch","map","ep","includes","EpisodesList","lazy","HomePage","useEffect","a","async","fetch","data","json","dataJSON","_embedded","fetchDataAction","fallback","FavPage","RouterPage","pageComponent","ReactDOM","render","useReducer","Provider","value","path","default","document","getElementById"],"mappings":"kQAKMA,EAAuB,CAC3BC,SAAU,GACVC,UAAW,IAGAC,EAAQC,wBAA4BJ,GAEjD,SAASK,EAAQC,EAAeC,GAC9B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,eACFF,EADL,CAEEL,SAAUM,EAAOE,UAErB,IAAK,UACH,OAAO,eACFH,EADL,CAEEJ,UAAU,GAAD,mBAAMI,EAAMJ,WAAZ,CAAuBK,EAAOE,YAE3C,IAAK,aACH,OAAO,eACFH,EADL,CAEEJ,UAAWI,EAAMJ,UAAUQ,QAAO,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOE,QAAQG,QAEjF,QACE,OAAON,GCzBb,IAoBeO,EApB4B,SAACC,GAAgB,IAClDR,EAAUS,qBAAWZ,GAArBG,MAER,OACE,oCACE,4BAAQU,UAAU,UAChB,6BACE,8CACA,6DAEF,6BACE,kBAAC,IAAD,CAAMC,GAAG,sCAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,2CAAT,gBAAiEX,EAAMJ,UAAUgB,UAGpFJ,EAAMK,W,gBCPAC,EAAkB,SAACT,EAAmBT,EAA4BmB,GAI7E,OAAOA,EAAS,CACdb,KAJmBN,EAAUoB,KAAI,SAACC,GAAD,OAA0BA,EAAGX,MAC7DY,SAASb,EAAQC,IAGG,aAAe,UACpCH,QAASE,KCZPc,EAAeC,gBAAK,kBAAM,gCAuBjBC,EArBY,WAAO,IAAD,EACHZ,qBAAWZ,GAA/BG,EADuB,EACvBA,MAAOe,EADgB,EAChBA,SAEfO,qBAAU,WACkB,IAA1BtB,EAAML,SAASiB,QDVY,SAAOG,GAAP,UAAAQ,EAAAC,OAAA,sDACjB,0EADiB,WAAAD,EAAA,MAEVE,MADP,4EADiB,cAEvBC,EAFuB,kBAAAH,EAAA,MAGNG,EAAKC,QAHC,cAGvBC,EAHuB,yBAItBb,EAAS,CACdb,KAAM,aACNC,QAASyB,EAASC,UAAUlC,YAND,qCCUImC,CAAgBf,MAGjD,IAAMP,EAAuB,CAC3Bb,SAAUK,EAAML,SAChBmB,kBACAlB,UAAWI,EAAMJ,UACjBmB,YAGF,OACE,kBAAC,WAAD,CAAUgB,SAAU,oCAAE,4CACpB,kBAACZ,EAAiBX,KCnBlBW,EAAeC,gBAAK,kBAAM,gCAoBjBY,EAjBW,WAAO,IAAD,EACFvB,qBAAWZ,GAA/BG,EADsB,EACtBA,MAAOe,EADe,EACfA,SAETP,EAAuB,CAC3Bb,SAAUK,EAAMJ,UAChBkB,kBACAlB,UAAWI,EAAMJ,UACjBmB,YAGF,OACE,kBAAC,WAAD,CAAUgB,SAAU,oCAAE,4CACpB,kBAAC,EAAiBvB,KCXlByB,EAAa,SAACzB,GAAD,OAA+DA,EAAM0B,eACxFC,IAASC,OACP,mBLsBK,SAAuB5B,GAA0B,IAAD,EAC3B6B,qBAAWtC,EAASL,GADO,mBAC9CM,EAD8C,KACvCe,EADuC,KAErD,OAAO,kBAAClB,EAAMyC,SAAP,CAAgBC,MAAO,CAACvC,QAAOe,aAAYP,EAAMK,YKxBxD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAK2B,KAAK,KACR,kBAACP,EAAD,CAAYC,cAAe,kBAAC,EAAD,MAAcO,SAAO,IAChD,kBAACR,EAAD,CAAYC,cAAe,kBAAC,EAAD,MAAaM,KAAK,cAInDE,SAASC,eAAe,W","file":"static/js/main.c4dbb64d.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react'\n\nimport { IState, IAction } from './interfaces'\n\n\nconst initialState: IState = {\n  episodes: [],\n  favorites: [],\n}\n\nexport const Store = createContext<IState | any>(initialState)\n\nfunction reducer(state: IState, action: IAction): IState {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return {\n        ...state,\n        episodes: action.payload\n      }\n    case 'ADD_FAV':\n      return {\n        ...state,\n        favorites: [...state.favorites, action.payload],\n      }\n    case 'REMOVE_FAV':\n      return {\n        ...state,\n        favorites: state.favorites.filter((episode) => episode.id !== action.payload.id)\n      }\n    default:\n      return state\n  }\n}\n\nexport function StoreProvider(props: any): JSX.Element {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return <Store.Provider value={{state, dispatch}}>{props.children}</Store.Provider>\n}\n","import React, { useContext } from 'react'\nimport { Link, RouteComponentProps } from '@reach/router'\nimport { Store } from './Store'\n\n\nconst App: React.FC<RouteComponentProps> = (props: any) => {\n  const { state } = useContext(Store)\n\n  return (\n    <>\n      <header className=\"header\">\n        <div>\n          <h1>Rick and Morty</h1>\n          <p>Pick your favorite episode!!!</p>\n        </div>\n        <div>\n          <Link to='/favorite-rick-and-morty-episodes/'>Home</Link>\n          <Link to='/favorite-rick-and-morty-episodes/faves'>Favorite(s): {state.favorites.length}</Link>\n        </div>\n      </header>\n      {props.children}\n    </>\n  );\n}\n\nexport default App;\n","import { IEpisode, IAction } from './interfaces'\n\n\nexport const fetchDataAction = async (dispatch: any) => {\n  const url = 'https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes'\n  const data = await fetch(url)\n  const dataJSON = await data.json()\n  return dispatch({\n    type: 'FETCH_DATA',\n    payload: dataJSON._embedded.episodes\n  })\n}\n\nexport const toggleFavAction = (episode: IEpisode, favorites: Array<IEpisode>, dispatch: any): IAction => {\n  const episodeInFav = favorites.map((ep: IEpisode): number => ep.id)\n    .includes(episode.id)\n\n  return dispatch({\n    type: episodeInFav ? 'REMOVE_FAV' : 'ADD_FAV',\n    payload: episode\n  })\n}","import React, { useContext, useEffect, lazy, Suspense } from 'react'\nimport { IEpisodeProps } from './interfaces'\nimport { Store } from './Store'\n\nimport { toggleFavAction, fetchDataAction } from './Actions'\n\n\nconst EpisodesList = lazy(() => import('./episodesList'))\n\nconst HomePage: React.FC = () => {\n  const { state, dispatch } = useContext(Store)\n\n  useEffect((): void => {\n    state.episodes.length === 0 && fetchDataAction(dispatch)\n  });\n\n  const props: IEpisodeProps = {\n    episodes: state.episodes,\n    toggleFavAction,\n    favorites: state.favorites,\n    dispatch,\n  }\n\n  return (\n    <Suspense fallback={<><h1>LOADING...</h1></>}>\n      <EpisodesList {...props} />\n    </Suspense>\n  );\n}\n\nexport default HomePage;\n","import React, { useContext, Suspense, lazy } from 'react'\n\nimport { toggleFavAction } from './Actions'\nimport { Store } from './Store'\nimport { IEpisodeProps } from './interfaces'\n\nconst EpisodesList = lazy(() => import('./episodesList'))\n\n\nconst FavPage: React.FC = () => {\n  const { state, dispatch } = useContext(Store)\n\n  const props: IEpisodeProps = {\n    episodes: state.favorites,\n    toggleFavAction,\n    favorites: state.favorites,\n    dispatch,\n  }\n\n  return (\n    <Suspense fallback={<><h1>LOADING...</h1></>}>\n      <EpisodesList {...props} />\n    </Suspense>\n  );\n}\n\nexport default FavPage;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router, RouteComponentProps } from '@reach/router'\nimport './index.css'\nimport App from './App'\nimport HomePage from './HomePage'\nimport FavPage from './FavPage'\nimport { StoreProvider } from './Store'\n\n\nconst RouterPage = (props: {pageComponent: JSX.Element} & RouteComponentProps) => props.pageComponent\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <App path='/'>\n        <RouterPage pageComponent={<HomePage />} default />\n        <RouterPage pageComponent={<FavPage />} path='/faves' />\n      </App>\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}